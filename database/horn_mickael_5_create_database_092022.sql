-- MySQL Script generated by MySQL Workbench
-- Mon Sep  5 09:45:58 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema oc_pizza
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema oc_pizza
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `oc_pizza` DEFAULT CHARACTER SET utf8 ;
USE `oc_pizza` ;

-- -----------------------------------------------------
-- Table `oc_pizza`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`address` (
  `address_id` INT NOT NULL AUTO_INCREMENT,
  `street_number` INT NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `postal_code` INT NOT NULL,
  `city` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`address_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`client` (
  `client_id` INT NOT NULL AUTO_INCREMENT,
  `last_name` VARCHAR(50) NOT NULL,
  `first_name` VARCHAR(50) NOT NULL,
  `phone_number` VARCHAR(20) NOT NULL,
  `email_address` VARCHAR(100) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`client_id`),
  INDEX `address_idx` (`address_id` ASC) ,
  CONSTRAINT `FK_client_address_id`
    FOREIGN KEY (`address_id`)
    REFERENCES `oc_pizza`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`restaurant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`restaurant` (
  `restaurant_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`restaurant_id`),
  INDEX `address_idx` (`address_id` ASC) ,
  UNIQUE INDEX `address_id_UNIQUE` (`address_id` ASC) ,
  CONSTRAINT `FK_restaurant_address`
    FOREIGN KEY (`address_id`)
    REFERENCES `oc_pizza`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`employee` (
  `employee_id` INT NOT NULL AUTO_INCREMENT,
  `last_name` VARCHAR(50) NOT NULL,
  `first_name` VARCHAR(50) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `address_id` INT NOT NULL,
  `restaurant_id` INT NOT NULL,
  PRIMARY KEY (`employee_id`),
  INDEX `restaurant_id_idx` (`restaurant_id` ASC) ,
  INDEX `address_id_idx` (`address_id` ASC) ,
  CONSTRAINT `FK_employee_address_id`
    FOREIGN KEY (`address_id`)
    REFERENCES `oc_pizza`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_employee_restaurant_id`
    FOREIGN KEY (`restaurant_id`)
    REFERENCES `oc_pizza`.`restaurant` (`restaurant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`order` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `is_paid` TINYINT NOT NULL,
  `order_notes` VARCHAR(255) NULL,
  `order_date` DATE NOT NULL,
  `is_online` TINYINT NOT NULL,
  `delivery_notes` TEXT NULL,
  `order_status` ENUM('waiting', 'preparing', 'delivering', 'finished', 'canceled') NOT NULL,
  `delivery_mode` ENUM('delivery', 'pickup') NOT NULL,
  `payment_type` ENUM('online_credit_card', 'offline_credit_card', 'cash') NULL,
  `pizza_maker_id` INT NULL,
  `delivery_man_id` INT NULL,
  `client_id` INT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `client_id_idx` (`client_id` ASC) ,
  INDEX `pizza_maker__idx` (`pizza_maker_id` ASC) ,
  INDEX `delivery_man_id_idx` (`delivery_man_id` ASC) ,
  CONSTRAINT `FK_order_client_id`
    FOREIGN KEY (`client_id`)
    REFERENCES `oc_pizza`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_order_pizza_maker_id`
    FOREIGN KEY (`pizza_maker_id`)
    REFERENCES `oc_pizza`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_order_delivery_man_id`
    FOREIGN KEY (`delivery_man_id`)
    REFERENCES `oc_pizza`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`pizza_maker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`pizza_maker` (
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`employee_id`),
  CONSTRAINT `FK_pizza_maker_employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `oc_pizza`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`delivery_man`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`delivery_man` (
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`employee_id`),
  CONSTRAINT `FK_delivery_man_employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `oc_pizza`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`manager` (
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`employee_id`),
  CONSTRAINT `FK_manager_employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `oc_pizza`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`receptionist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`receptionist` (
  `employee_id` INT NOT NULL,
  PRIMARY KEY (`employee_id`),
  CONSTRAINT `FK_receptionist_employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `oc_pizza`.`employee` (`employee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`ingredient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`ingredient` (
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`stock` (
  `restaurant_id` INT NOT NULL,
  `ingredient` VARCHAR(50) NOT NULL,
  `quantity` INT NULL,
  `quantity_type` ENUM('gram', 'milliliter') NULL,
  `add_date` DATE NULL,
  PRIMARY KEY (`restaurant_id`, `ingredient`),
  INDEX `ingredient_idx` (`ingredient` ASC) ,
  CONSTRAINT `FK_stock_restaurant_id`
    FOREIGN KEY (`restaurant_id`)
    REFERENCES `oc_pizza`.`restaurant` (`restaurant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_stock_ingredient`
    FOREIGN KEY (`ingredient`)
    REFERENCES `oc_pizza`.`ingredient` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`recipe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`recipe` (
  `name` VARCHAR(50) NOT NULL,
  `steps` TEXT NOT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`ingredient_quantity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`ingredient_quantity` (
  `recipe` VARCHAR(50) NOT NULL,
  `ingredient` VARCHAR(50) NOT NULL,
  `quantity` INT NOT NULL,
  `quantity_type` ENUM('gram', 'milliliter') NOT NULL,
  PRIMARY KEY (`recipe`, `ingredient`),
  INDEX `ingredient_idx` (`ingredient` ASC) ,
  CONSTRAINT `FK_ingredient_quantity_recipe`
    FOREIGN KEY (`recipe`)
    REFERENCES `oc_pizza`.`recipe` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_ingredient_quantity_ingredient`
    FOREIGN KEY (`ingredient`)
    REFERENCES `oc_pizza`.`ingredient` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`article`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`article` (
  `name` VARCHAR(50) NOT NULL,
  `price` FLOAT NOT NULL,
  `recipe` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`name`),
  INDEX `recipe_idx` (`recipe` ASC) ,
  UNIQUE INDEX `recipe_UNIQUE` (`recipe` ASC) ,
  CONSTRAINT `FK_article_recipe`
    FOREIGN KEY (`recipe`)
    REFERENCES `oc_pizza`.`recipe` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `oc_pizza`.`article_quantity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oc_pizza`.`article_quantity` (
  `order_id` INT NOT NULL,
  `article` VARCHAR(50) NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`order_id`, `article`),
  INDEX `article_idx` (`article` ASC) ,
  CONSTRAINT `FK_article_quantity_order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `oc_pizza`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_article_quantity_article`
    FOREIGN KEY (`article`)
    REFERENCES `oc_pizza`.`article` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
